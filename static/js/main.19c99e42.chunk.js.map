{"version":3,"sources":["components/pin/Pin.jsx","redux/actions/Request.js","redux/types/Common.js","redux/actions/REST.js","containers/Home/Home.jsx","redux/reducers/BusReducer.js","redux/types/Bus.js","redux/reducers/index.js","redux/store/index.js","Root.jsx","App.js","serviceWorker.js","index.js"],"names":["pinStyle","fill","stroke","CityPin","_this$props","this","props","_this$props$size","size","onClick","react_default","a","createElement","height","viewBox","style","Object","objectSpread","transform","concat","d","PureComponent","DEFAULT_TIMEOUT","DEFAULT_DEADLINE","BASE_URL","process","console","log","__actionName","group","method","action","step","to","snake","toUpperCase","__action","type","path","id","params","payload","error","name","objectId","__dispatch","dispatch","path_extras","request","STARTED","COMPLETED","FAILED","PATH","headers","Promise","resolve","reject","url","call","get","join","withCredentials","accept","timeout","response","deadline","query","forEach","header","set","end","err","res","fetch","then","body","message","toast","success","status","Error","Home","_Component","_getPrototypeOf2","_this","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","apply","state","viewport","width","longitude","latitude","zoom","popupInfo","_updateViewport","setState","_renderBusMarker","bus","index","esm","key","Longitude","Latitude","Pin_CityPin","inherits","createClass","value","actions","prevProps","prevState","snapShot","_this2","loading","setTimeout","busLoc","className","assign","onViewportChange","mapboxApiAccessToken","map","Component","connect","busReducer","bindActionCreators","initialState","undefined","rootReducer","combineReducers","middleWare","applyMiddleware","promiseMiddleWare","thunk","logger","store","createStore","composeWithDevTools","Root","es","BrowserRouter","react","Route","exact","component","App","src_Root","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19c99e42.chunk.js","sourcesContent":["import React, {PureComponent} from 'react';\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\nconst pinStyle = {\n  fill: '#000',\n  stroke: 'none'\n};\n\nexport default class CityPin extends PureComponent {\n\n  render() {\n    const {size = 20, onClick} = this.props;\n\n    return (\n\n    // <svg height={size} style={{...pinStyle, transform: `translate(${-size / 2}px,${-size}px)`}} viewBox=\"0 -76 512 512\" width=\"512pt\" xmlns=\"http://www.w3.org/2000/svg\">\n    //     <path d=\"m512 240-26.398438 14.398438 26.398438 15.601562v15c0 24.898438-20.097656 45-45 45h-422c-24.902344 0-45-20.101562-45-45v-45l16.199219-15-16.199219-15v-30l16.800781-36.902344-16.800781-83.097656v-15c0-24.902344 20.097656-45 45-45h373.398438c17.101562 0 32.699218 9.601562 40.199218 24.898438l17.703125 35.101562-51.300781 87 87 63zm0 0\" fill=\"#e63950\"/>\n    //     <path d=\"m512 240-26.398438 14.398438 26.398438 15.601562v15c0 24.898438-20.097656 45-45 45h-272v-330h223.398438c17.101562 0 32.699218 9.601562 40.199218 24.898438l17.703125 35.101562-51.300781 87 87 63zm0 0\" fill=\"#cc2e43\"/>\n    //     <path d=\"m512 180v30h-111l-30-30h-371v-120h476.300781l15 30-6.300781 51.898438zm0 0\" fill=\"#cc2e43\"/>\n    //     <path d=\"m512 180v30h-111l-30-30h-176v-120h281.300781l15 30-6.300781 51.898438zm0 0\" fill=\"#ae2538\"/>\n    //     <path d=\"m512 240v30h-45c-8.402344 0-15-6.601562-15-15 0-8.402344 6.597656-15 15-15zm0 0\" fill=\"#c6e2e7\"/>\n    //     <path d=\"m330 225c0 8.398438-6.597656 15-15 15h-315v-30h315c8.402344 0 15 6.597656 15 15zm0 0\" fill=\"#ffa78f\"/>\n    //     <path d=\"m105 360c-24.8125 0-45-20.1875-45-45s20.1875-45 45-45 45 20.1875 45 45-20.1875 45-45 45zm0 0\" fill=\"#4a696f\"/>\n    //     <path d=\"m195 270c-24.902344 0-45 20.097656-45 45 0 24.898438 20.097656 45 45 45s45-20.101562 45-45c0-24.902344-20.097656-45-45-45zm0 0\" fill=\"#4a696f\"/>\n    //     <path d=\"m407 360c-24.8125 0-45-20.1875-45-45s20.1875-45 45-45 45 20.1875 45 45-20.1875 45-45 45zm0 0\" fill=\"#384949\"/>\n    //     <path d=\"m510.5 128.398438c.898438 2.101562 1.5 4.199218 1.5 6.601562v45h-98.699219l-21.300781-21.300781v-68.699219h99.300781zm0 0\" fill=\"#76e2f8\"/>\n    //     <path d=\"m30 90h60v60h-60zm0 0\" fill=\"#a8ebfa\"/><path d=\"m120 90h60v60h-60zm0 0\" fill=\"#a8ebfa\"/>\n    //     <path d=\"m210 90h60v60h-60zm0 0\" fill=\"#76e2f8\"/><path d=\"m300 90h62v60h-62zm0 0\" fill=\"#76e2f8\"/>\n    //     <path d=\"m330 225c0 8.398438-6.597656 15-15 15h-120v-30h120c8.402344 0 15 6.597656 15 15zm0 0\" fill=\"#f89580\"/>\n    //     <path d=\"m240 315c0 24.898438-20.097656 45-45 45v-90c24.902344 0 45 20.097656 45 45zm0 0\" fill=\"#384949\"/>\n    //     <path d=\"m105 330c-8.277344 0-15-6.722656-15-15s6.722656-15 15-15 15 6.722656 15 15-6.722656 15-15 15zm0 0\" fill=\"#deecf1\"/>\n    //     <path d=\"m210 315c0 8.398438-6.597656 15-15 15s-15-6.601562-15-15c0-8.402344 6.597656-15 15-15s15 6.597656 15 15zm0 0\" fill=\"#deecf1\"/>\n    //     <g fill=\"#c6e2e7\">\n    //         <path d=\"m407 330c-8.277344 0-15-6.722656-15-15s6.722656-15 15-15 15 6.722656 15 15-6.722656 15-15 15zm0 0\"/>\n    //         <path d=\"m210 315c0 8.398438-6.597656 15-15 15v-30c8.402344 0 15 6.597656 15 15zm0 0\"/>\n    //     </g>\n    // </svg>\n      <svg \n        height={size}\n        viewBox=\"0 0 24 24\"\n        style={{...pinStyle, transform: `translate(${-size / 2}px,${-size}px)`}}\n        onClick={onClick}\n      >\n        <path d={ICON}/>\n      </svg>\n    );\n  }\n}","import request from 'superagent';\n\nconst DEFAULT_TIMEOUT = 5000;\nconst DEFAULT_DEADLINE = 60000;\nconst BASE_URL = process.env.BASE_URL;\nconsole.log(process.env);\n\nexport function fetch(path, params) {\n  // params.apikey = TRANSLINK_API;\n  let headers = [];\n  return new Promise((resolve, reject) => {\n    let url = [BASE_URL, path];\n    let call = '';\n    call = request\n      .get(url.join('/'))\n      .withCredentials()\n      .accept('json')\n      .timeout({\n        response: DEFAULT_TIMEOUT, // Wait 5 seconds for the server to start sending,\n        deadline: DEFAULT_DEADLINE, // but allow 1 minute for the file to finish loading.\n      })\n      .query(params);\n    if (headers) {\n      headers.forEach(header => {\n        call.set(header[0], header[1]);\n      });\n    }\n    call.end((err, res) => {\n      if (err) {\n        reject(err, res);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n}\n","export const ACTION_GET = 'GET';\n\nexport const ACTION_STARTED = 'STARTED';\nexport const ACTION_COMPLETED = 'COMPLETED';\nexport const ACTION_FAILED = 'FAILED';\n\nexport const DONE = 'DONE';\nexport const STARTED = 'STARTED';\nexport const FAILED = 'FAILED';\nexport const LOADING = 'LOADING';\n\n","import to from 'to-case';\nimport { toast } from 'react-toastify';\nimport { fetch }  from './Request';\n\nimport {\n  ACTION_GET,\n  ACTION_STARTED,\n  ACTION_COMPLETED,\n  ACTION_FAILED,\n} from '../types/Common';\n\nconst __actionName = (group, method, action, step) => {\n  return to.snake(group + ' ' + method + ' ' + (action || '') + ' ' + step).toUpperCase();\n};\n\nconst __action = (type, path, method, id, params, payload, error) => {\n  let action = { type, name: path };\n\n  if (params) {\n    action.params = params;\n  }\n\n  if (id) {\n    action.objectId = id;\n  }\n\n  if (payload) {\n    action.payload = payload;\n  }\n\n  if (error) {\n    action.error = error;\n  }\n\n  return action;\n};\n\nconst __dispatch = (group, action, method, params, dispatch, id, path_extras) => {\n  let STARTED = __actionName(group, method, action, ACTION_STARTED);\n  let COMPLETED = __actionName(group, method, action, ACTION_COMPLETED);\n  let FAILED = __actionName(group, method, action, ACTION_FAILED);\n\n  dispatch(__action(STARTED, action, method, id, params));\n\n  let request;\n  const PATH = group + (action ? '/' + action : '');\n\n  // eslint-disable-next-line default-case\n  switch (method) {\n    case ACTION_GET:\n      request = fetch(PATH, id, params, [], path_extras);\n      break;\n  }\n\n  if (request) {\n    return request.then(\n      response => {\n        if (response.body.message) {\n          toast.success(response.body.message);\n        }\n        dispatch(__action(COMPLETED, action, method, id, params, response.body));\n      },\n      error => {\n        if (error.status === 401) {\n\n        } else {\n          if (error.response && error.response.body && error.response.body.message) {\n            toast.error(error.response.body.message);\n          }\n\n          dispatch(__action(FAILED, action, method, id, params, null, error.response.body));\n        }\n      }\n    );\n  }\n\n  throw new Error(`Could not find a proper method for action \"${method}\"`);\n};\n\nexport const get = (group, action, id, params) => dispatch => {\n  return __dispatch(group, action, ACTION_GET, params, dispatch, id);\n};","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport MapGL, {Marker} from 'react-map-gl';\nimport Pin from 'components/pin/Pin';\n// import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { get } from 'actions/REST';\n\n\nexport class Home extends Component {\n  state = {\n    viewport: {\n      width: 800,\n      height: 800,\n      longitude: -123.120738,\n      latitude: 49.282729,\n      zoom: 12\n    },\n    popupInfo: null,\n  }\n  componentDidMount () {\n    this.props.actions.get('bus', null, null, {});\n  }\n\n  componentDidUpdate (prevProps, prevState, snapShot) {\n    if(prevProps.bus.loading && !this.props.bus.loading){\n      setTimeout(() => {\n        if(!this.props.bus.loading){\n          this.props.actions.get('bus', null, null, {});\n        }\n      }, 3000);\n    }\n  }\n  \n  _updateViewport = (viewport) => {\n    this.setState({viewport});\n  }\n\n  _renderBusMarker = (bus, index) => {\n    return (\n      <Marker \n        key={`marker-${index}`}\n        longitude={bus.Longitude}\n        latitude={bus.Latitude} >\n        <Pin size={20} onClick={() => this.setState({popupInfo: bus})} />\n      </Marker>\n    );\n  }\n\n  render() {\n    const { viewport } = this.state;\n    const busLoc = this.props.bus.busLoc;\n    return (\n      <div className=\"map-container\">\n        <MapGL\n        {...viewport}\n        onViewportChange={this._updateViewport}\n        mapboxApiAccessToken={process.env.MAPBOX_TOKEN} >\n\n        { busLoc.map(this._renderBusMarker) }\n\n      </MapGL>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  bus: state.busReducer,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    actions: bindActionCreators({ get }, dispatch),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","import * as bus from '../types/Bus';\n\nconst initialState = {\n  loading: false,\n  error: {},\n  busLoc:[],\n};\n\nconst busReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case bus.BUS_GET_STARTED:\n      return {\n          ...state,\n          loading:true,\n      }\n    case bus.BUS_GET_COMPLETED:\n      return {\n        ...state,\n        busLoc: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default busReducer;\n","export const BUS_GET_COMPLETED = 'BUS_GET_COMPLETED';\nexport const BUS_GET_STARTED = 'BUS_GET_STARTED';\n\n","import { combineReducers } from 'redux';\nimport busReducer from './BusReducer';\n\nconst rootReducer = combineReducers({\n  busReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleWare from 'redux-promise-middleware';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducer from '../reducers';\n\nconst middleWare = applyMiddleware(promiseMiddleWare(), thunk, logger);\n\nconst store = createStore(rootReducer, composeWithDevTools(middleWare));\n\nexport default store;\n","import React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { Home } from 'containers';\nimport store from './redux/store';\n\nclass Root extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <Fragment>\n            <Route exact path=\"/\" component={Home} />\n          </Fragment>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default Root;\n","import React, { Component } from 'react';\nimport Root from './Root';\nimport 'styles/Main.scss';\n\nclass App extends Component {\n  render() {\n    return <Root />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}